# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'InventoryManagement.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector, DeliveryRecords

def isInt(value):
    try:
        int(value)
        return True
    except ValueError:
        return False

class Ui_Form(object):
    def check_data(self, currRow, currCol, prevRow, prevCol):
        prevItem = self.deliveryTable.item(prevRow, prevCol)
        if prevItem:
            if (prevCol == 4 or prevCol == 3) and not isInt(prevItem.text()):
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Warning)
                msg.setWindowTitle("Number only.")
                msg.setText("Only whole numbers can be accepted as input")
                msg.exec_()
                del msg
                item = QtWidgets.QTableWidgetItem(str(0))
                alignment = QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter
                item.setTextAlignment(alignment)
                self.deliveryTable.setItem(prevRow, prevCol, item)
                

            
    def searchItem(self):
        text = self.productSearchEntry.text()
        current = -1
        if text != "":
            for i in range(self.deliveryTable.rowCount()):
                barcode, name = self.deliveryTable.item(i, 0).text(), self.deliveryTable.item(i, 1).text()
                if text.lower() in barcode.lower() or text.lower() in name.lower():
                    current = i
                    break
        else:
            current = -1
        self.deliveryTable.setCurrentCell(current, 4)

    def reset(self):
        rows = self.deliveryTable.rowCount()
        for i in range(rows):
            alignment = QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter
            item = QtWidgets.QTableWidgetItem(str(0))
            item.setTextAlignment(alignment)
            self.deliveryTable.setItem(i, 3, item)
            item2 = QtWidgets.QTableWidgetItem(str(0))
            item2.setTextAlignment(alignment)
            self.deliveryTable.setItem(i, 4, item2)
    
    def recordDelivery(self):
        order_id = self.orderNumberEntry.text()
        if order_id == "":
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Warning)
            msg.setWindowTitle("No Order ID")
            msg.setText("There's no Order ID on this delivery")
            msg.exec_()
        else:
            buttonReply = QtWidgets.QMessageBox.question(self.Form, 'Confirm Record', "Record this delivery?", QtWidgets.QMessageBox.Yes | QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.No)
            if buttonReply == QtWidgets.QMessageBox.Yes:
                rows = self.deliveryTable.rowCount()
                order_id = self.orderNumberEntry.text()
                delivered_by = self.deliveredByEntry.text()
                self.parent.c.execute("INSERT INTO delivery (order_id, received_by) VALUES (%s, %s)", (order_id, 1, ))
                delivery_id = self.parent.c.lastrowid
                for i in range(rows):
                    barcode, name, stock, expected, delivered = [self.deliveryTable.item(i, x).text() for x in range(5)]
                    if int(expected) != 0 or int(delivered) != 0:
                        self.parent.c.execute("SELECT id, stock from product where barcode = %s", (barcode, ))
                        product_id, stock = self.parent.c.fetchone()
                        self.parent.c.execute("INSERT INTO delivery_product (delivery_id, product_id, expected, delivered) VALUES (%s, %s, %s, %s)", (delivery_id, product_id, expected, delivered, ))
                        new_stock = int(stock) + int(delivered)
                        self.parent.c.execute("UPDATE product SET stock = %s WHERE id = %s", (new_stock, product_id, ))
                self.parent.conn.commit()
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Information)
                msg.setWindowTitle("Success!")
                msg.setText("You have recorded the delivery successfully")
                msg.exec_()
                self.orderNumberEntry.setText("")
                self.deliveredByEntry.setText("")
                self.setTable()
                del msg
    def setTable(self):
        self.parent.c.execute("SELECT barcode, name, stock from product")
        results = self.parent.c.fetchall()
        self.deliveryTable.setRowCount(len(results))
        for i, result in enumerate(results):
            barcode, name, stock = result
            barcode_item = QtWidgets.QTableWidgetItem(str(barcode))
            barcode_item.setFlags(barcode_item.flags() & ~QtCore.Qt.ItemIsEditable)
            self.deliveryTable.setItem(i, 0, barcode_item)
            name_item = QtWidgets.QTableWidgetItem(str(name))
            name_item.setFlags(name_item.flags() & ~QtCore.Qt.ItemIsEditable)
            self.deliveryTable.setItem(i, 1, name_item)
            align = QtCore.Qt.AlignRight|QtCore.Qt.AlignVCenter
            stock_item = QtWidgets.QTableWidgetItem(str(stock))
            stock_item.setTextAlignment(align)
            stock_item.setFlags(stock_item.flags() & ~QtCore.Qt.ItemIsEditable)
            self.deliveryTable.setItem(i, 2, stock_item)
            expected_item = QtWidgets.QTableWidgetItem(str(0))
            expected_item.setTextAlignment(align)
            self.deliveryTable.setItem(i, 3, expected_item)
            delivered_item = QtWidgets.QTableWidgetItem(str(0))
            delivered_item.setTextAlignment(align)
            self.deliveryTable.setItem(i, 4, delivered_item)
            

    def intTester(self, target):
        value = target.text()
        try:
            int(value)
        except:
            target.setText(value[:-1])
    
    def setupUi(self, Form, parent):
        self.DeliveryRecordsWidget = QtWidgets.QWidget()
        self.DeliveryRecordsWidget.setWindowModality(QtCore.Qt.ApplicationModal)
        self.DeliveryRecords_ui = DeliveryRecords.Ui_Form()
        self.DeliveryRecords_ui.setupUi(self.DeliveryRecordsWidget, parent)
        self.parent = parent
        self.Form = Form
        self.Form.setObjectName("Form")
        self.Form.setFixedSize(940, 450)
        self.Form.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.Form.setWindowModality(QtCore.Qt.ApplicationModal)
        self.deliveryTable = QtWidgets.QTableWidget(self.Form)
        self.deliveryTable.setGeometry(QtCore.QRect(30, 130, 900, 301))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.deliveryTable.setFont(font)
        self.deliveryTable.setObjectName("deliveryTable")
        self.deliveryTable.setColumnCount(5)
        self.deliveryTable.verticalHeader().hide()
        self.deliveryTable.setColumnWidth(0, 110)
        self.deliveryTable.setColumnWidth(1, 500)
        self.deliveryTable.setColumnWidth(2, 90)
        self.deliveryTable.setColumnWidth(3, 90)
        self.deliveryTable.setColumnWidth(4, 90)
        item = QtWidgets.QTableWidgetItem()
        self.deliveryTable.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.deliveryTable.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.deliveryTable.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem("Expected")
        self.deliveryTable.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.deliveryTable.setHorizontalHeaderItem(4, item)
        self.deliveryTable.setSelectionBehavior(QtWidgets.QTableView.SelectRows)
        self.deliveryTable.setSelectionMode(QtWidgets.QTableView.SingleSelection)
        
        header = self.deliveryTable.horizontalHeader()
        
        header.setSectionResizeMode(0, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(2, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(3, QtWidgets.QHeaderView.Fixed)
        header.setSectionResizeMode(4, QtWidgets.QHeaderView.Fixed)
        self.layoutWidget = QtWidgets.QWidget(self.Form)
        self.layoutWidget.setGeometry(QtCore.QRect(30, 80, 581, 41))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.productSearchLabel = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.productSearchLabel.setFont(font)
        self.productSearchLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.productSearchLabel.setObjectName("productSearchLabel")
        self.horizontalLayout_3.addWidget(self.productSearchLabel)
        self.productSearchEntry = QtWidgets.QLineEdit(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.productSearchEntry.sizePolicy().hasHeightForWidth())
        self.productSearchEntry.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.productSearchEntry.setFont(font)
        self.productSearchEntry.setStyleSheet("padding-left: 5px;")
        self.productSearchEntry.setText("")
        self.productSearchEntry.setObjectName("productSearchEntry")
        self.productSearchEntry.textChanged.connect(self.searchItem)
        self.horizontalLayout_3.addWidget(self.productSearchEntry)
        self.layoutWidget_2 = QtWidgets.QWidget(self.Form)
        self.layoutWidget_2.setGeometry(QtCore.QRect(330, 30, 281, 41))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.deliveredByLabel = QtWidgets.QLabel(self.layoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.deliveredByLabel.setFont(font)
        self.deliveredByLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.deliveredByLabel.setObjectName("deliveredByLabel")
        self.horizontalLayout_4.addWidget(self.deliveredByLabel)
        self.deliveredByEntry = QtWidgets.QLineEdit(self.layoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.deliveredByEntry.sizePolicy().hasHeightForWidth())
        self.deliveredByEntry.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.deliveredByEntry.setFont(font)
        self.deliveredByEntry.setStyleSheet("QLineEdit {padding-left: 5px;} QLineEdit:active {padding-left: 5px; background-color: #f9f9f9}")
        self.deliveredByEntry.setText("")
        self.deliveredByEntry.setPlaceholderText("")
        self.deliveredByEntry.setObjectName("deliveredByEntry")
        
        self.horizontalLayout_4.addWidget(self.deliveredByEntry)
        self.pushButton = QtWidgets.QPushButton(self.Form)
        self.pushButton.setGeometry(QtCore.QRect(620, 30, 151, 41))
        self.pushButton.setStyleSheet("QPushButton {background-color: #0D6EFD; color: white ; border-radius: 8px} QPushButton:hover {background-color: #0A58CA; color: white; border-radius:8px}")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.recordDelivery)
        self.deliveryRecords = QtWidgets.QPushButton(self.Form)
        self.deliveryRecords.setGeometry(QtCore.QRect(780, 30, 151, 41))
        self.deliveryRecords.setStyleSheet("QPushButton {background-color: #0D6EFD; color: white ; border-radius: 8px} QPushButton:hover {background-color: #0A58CA; color: white; border-radius:8px}")
        self.deliveryRecords.setObjectName("deliveryRecords")
        self.deliveryRecords.clicked.connect(lambda: self.DeliveryRecordsWidget.show())
        self.pushButton_2 = QtWidgets.QPushButton(self.Form)
        self.pushButton_2.setGeometry(QtCore.QRect(620, 80, 151, 41))
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton_2.setStyleSheet("QPushButton {background-color: #DC3545; color: white; border-radius: 8px;}\n"
"QPushButton:hover {background-color: #B02A37; color: white; border-radius:8px}")
        self.pushButton_2.setObjectName("pushButton_2")
        self.layoutWidget1 = QtWidgets.QWidget(self.Form)
        self.layoutWidget1.setGeometry(QtCore.QRect(30, 29, 281, 41))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.orderNumberLabel = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.orderNumberLabel.setFont(font)
        self.orderNumberLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.orderNumberLabel.setObjectName("orderNumberLabel")
        self.horizontalLayout.addWidget(self.orderNumberLabel)
        self.orderNumberEntry = QtWidgets.QLineEdit(self.layoutWidget1)
        self.orderNumberEntry.textChanged.connect(lambda x: self.intTester(self.orderNumberEntry))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.orderNumberEntry.sizePolicy().hasHeightForWidth())
        self.orderNumberEntry.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(12)
        self.orderNumberEntry.setFont(font)
        self.orderNumberEntry.setStyleSheet("padding-left: 5px;")
        self.orderNumberEntry.setText("")
        self.orderNumberEntry.setPlaceholderText("")
        self.orderNumberEntry.setObjectName("orderNumberEntry")
        self.horizontalLayout.addWidget(self.orderNumberEntry)
        Form.closeEvent = lambda x: self.parent.Form.show()
        self.retranslateUi(self.Form)
        QtCore.QMetaObject.connectSlotsByName(self.Form)
        Form.setTabOrder(self.orderNumberEntry, self.deliveredByEntry)
        Form.setTabOrder(self.deliveredByEntry, self.productSearchEntry)
        Form.setTabOrder(self.productSearchEntry, self.deliveryTable)
        Form.setTabOrder(self.deliveryTable, self.pushButton)
        Form.setTabOrder(self.pushButton, self.pushButton_2)
        self.deliveryTable.currentCellChanged.connect(self.check_data)

        # self.deliveryTable.cellChanged.connect(self.print_val)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.Form.setWindowTitle(_translate("Form", "Inventory Management"))
        item = self.deliveryTable.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Barcode"))
        item = self.deliveryTable.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Product Name"))
        item = self.deliveryTable.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Current Stock"))
        item = self.deliveryTable.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Expected"))
        item = self.deliveryTable.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Delivered"))
        self.productSearchLabel.setText(_translate("Form", "Product Search:"))
        self.productSearchEntry.setPlaceholderText(_translate("Form", "Barcode or Product Name"))
        self.deliveredByLabel.setText(_translate("Form", "Delivered by:"))
        self.pushButton.setText(_translate("Form", "Record Delivery"))
        self.pushButton_2.setText(_translate("Form", "Cancel Record"))
        self.deliveryRecords.setText(_translate("Form", "View Records"))
        self.orderNumberLabel.setText(_translate("Form", "Order Number: "))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    try:
        conn = mysql.connector.connect(host = "localhost", user = "root", password = "", database = "production")
        c = self.parent.conn.cursor()
    except:
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Critical)
        msg.setWindowTitle("Connection Error")
        msg.setText("Please start your localhost")
        msg.exec_()
        exit()
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(self.Form)
    Form.show()
    sys.exit(app.exec_())
